# The sprite data and level design were adopted from <Bong Bong> (1989) written by
# T.K. Lee while in Computer Science Department at Yonsei University, Korea.
# The program and the data had been open-sourced in a Korean online game community.
# Python scripts were written from scratch, but the data below was excerpted from the 1989 game.
#
# <Bong Bong> was a remake of <PONPOKO (ポンポコ)> (1982) from Sigma Enterprise, Japan.
# More about the original game can be found here: https://en.wikipedia.org/wiki/Ponpoko

data_path = 'data/'  # base image path

time_limit = 100  # each stage should be completed within 100 seconds
time_bonus = 100  # upon completion of each stage, (remaining seconds)x(time_bonus) is time bonus

life_limit = 3    # max number of trials

img_world = ['01.png',  # background
             '02.png', '03.png', '04.png', '05.png',  # left / right / rectangle / island platform
             '06.png',  # ladder
             '07.png',  # needle
             '08.png']  # bonus

img_tanuki = [['tl.png', ['tlj1.png', 'tlj2.png']],  # left / left jump motions
              ['tr.png', ['trj1.png', 'trj2.png']],  # right / right jump motions
              'to.png',  # up motion
              ['tx1.png', 'tx2.png', 'tx3.png', 'tx4.png', 'tx5.png'],  # dead / fall animation
              ['al.png', 'ar.png'],  # left / right small bonus
              ['bl.png', 'br.png']]  # left / right large bonus

img_enemy1 = [['cl1.png', 'cl2.png'],  # left motion
              ['cr1.png', 'cr2.png']]  # right motion

img_enemy2 = ['el.png', 'er.png']  # left / right

img_fruit = ['f0.png', 'f1.png', 'f2.png', 'f3.png', 'f4.png',
             'f5.png', 'f6.png', 'f7.png', 'f8.png', 'f9.png']  # fruit images of all stages

enemy_speeds = [[4, 0, 0, 3, 10],
                [5, 0, 5, 0, 11],
                [4, 0, 0, 6, 11],
                [4, 0, 3, 4, 12],
                [5, 0, 0, 6, 11],
                [6, 0, 5, 0, 12],
                [5, 0, 4, 5, 13],
                [6, 0, 7, 0, 12],
                [6, 7, 0, 5, 11],
                [5, 0, 6, 8, 11]]  # enemy2 information (location / speed) followed by enemy1 information (speed)

# Stage Information: Each stage is (rows x cols) = (12 x 20) cells
# .	empty
# 2	platform / left half-circle
# 3	platform / right half-circle
# 4	platform / rectangle
# 5	platform / island
# 6	ladder
# 7	needle
# #	target (100 points)
# a	bonus (500 points)
# b	bonus (1000 points)
# c	enemy1 (always appear on the right)
stages = [
    ['....................',
     'a.7#..#........7.#..',
     '4643..26..246444444.',
     '.6.....6....6.......',
     '.6...#.6....6.a7..#.',
     '443.2463.2444444464.',
     '......6..........6..',
     '#..b.76#.....7#..6..',
     '43.26443.5.24446444.',
     '....6..........6....',
     '..#.6....7.#7..6....',
     '44444444444444444444'],  # stage 1
    ['....................',
     '..7#...#7.7#..#.....',
     '46443..246443.2643..',
     '.6.......6.....6....',
     '.6..a....6...b76..#.',
     '443.263.243..6443.2.',
     '.....6.......6......',
     '.#...6.c#..#76....#.',
     '4463.2443..24463.24.',
     '..6...........6.....',
     '..6...#.7..7#.6.....',
     '44444444444444444444'],  # stage 2
    ['....................',
     '...#.....#7......7#.',
     '..2446..24463..2644.',
     '.....6.....6....6...',
     '#...a6..b#.67...6#..',
     '463.243.246443.243..',
     '.6........6.........',
     '.67.#....b6..#7.7#..',
     '444643...243.246444.',
     '...6...........6....',
     '...6...7#7#7..76....',
     '44444444444444444444'],  # stage 3
    ['....................',
     '.7#.....7#......#...',
     '643...26443....2464.',
     '6......6.........6..',
     '6c.7#..6#...b#...6#.',
     '446443.23.26443.244.',
     '..6........6........',
     '.#67......#67...#...',
     '4444643...2443.2464.',
     '....6............6..',
     '....6#.7..7#.....6..',
     '44444444444444444444'],  # stage 4
    ['....................',
     '#....#7...#...#.....',
     '463.2443.23..243.26.',
     '.6................6.',
     'c6...#.....#7....#6.',
     '43.263.....2463.244.',
     '....6........6......',
     '#...6b......a6..7#..',
     '463.23......23.6444.',
     '.6.............6....',
     '.6....#7.7#7...6....',
     '44444444444444444444'],  # stage 5
    ['....................',
     '..7#.......#7c...7..',
     '4643.......2463.246.',
     '.6...........6....6.',
     '#6.b.7#.....76...#6.',
     '43.2643....243.2644.',
     '....6...........6...',
     '#..76..#..#7....6.#.',
     '446443.5..243.643.2.',
     '..6...........6.....',
     '..6#.a7.#.7...6.#...',
     '44444444444444444444'],  # stage 6
    ['....................',
     '.#7.....#7...#.7..#.',
     '.2463...2463.263.64.',
     '...6......6...6..6..',
     '..76a...#76..#67.6..',
     '46443...2443.244644.',
     '.6..............6...',
     '#67...#.a.#.....6#..',
     '44463.5.5.23..26444.',
     '...6...........6....',
     '.#.6..#7b.7#.7.6....',
     '44444444444444444444'],  # stage 7
    ['....................',
     '...#......#.......#.',
     '.263..263.23..263.2.',
     '..6....6.......6....',
     '.c67#..6#......6#...',
     '46443..246....24464.',
     '.6.......6.......6..',
     '#6a...#..6..#..a76..',
     '443.263.243.5..6444.',
     '.....6.........6....',
     '.#7..6#7.#7b...6....',
     '44444444444444444444'],  # stage 8 (NOTE: changed (5,15) from 6 to 4)
    ['....................',
     '..7#...#..c.b....7#.',
     '4643..23.23.23.6444.',
     '.6.............6....',
     '#6....7#..#7...6..#.',
     '443.2643..246..5.64.',
     '.....6......6....6..',
     '.a#..6.....#6...76..',
     '.263.23....243.643..',
     '..6............6....',
     '..6.7.#.7.#.7..6....',
     '44444444444444444444'],  # stage 9
    ['....................',
     'a...7#..#.7..#..#7..',
     '3.2643..2643.5..246.',
     '...6.....6........6.',
     '#..6.c...67....#.76.',
     '3.23.26..2463..2644.',
     '......6....6....6...',
     '..7#.a6....6...#6...',
     '4643.23..263...2464.',
     '.6........6......6..',
     '.6.#.7.#..6.7.#..6..',
     '44444444444444444444']  # stage 10
]
